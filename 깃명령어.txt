* 브랜치 만들기
$git branch <브랜치이름>
예)
$git branch develop

*브랜치 목록보기
$git branch

* 브랜치를 사용하기 전에 이 브랜치를 사용하겠다고 명시적으로 지정하기
$git checkout <브랜치이름>    
예)
$git checkout develop
$git checkout master

* 브랜치 병합하기
$git merge <커밋이름>
예) develop 브랜치의 변경사항을 master 브랜치에 병합
$git checkout master
$git merge develop 

* 브랜치 삭제하기
$git branch -d <브랜치이름>
예)
$git branch -d develop

* 로컬브랜치에서 원격저장소에 올린다
$git push <원격저장소명> <브랜치명>
예)
$git push origin develop

* 로컬브랜치에서 원격저장소에 덮어쓴다
$git push -f <원격저장소명> <브랜치명>
$git push -f origin develop

* 모든 로컬브랜치를 원격저장소에 전송한다
$git push origin -all

* 원격저장소의 변경사항을 로컬로 받아온다
$git pull origin develop

* 원격저장소와 로컬 저장소에 있는 파일을 삭제한다
$git rm <파일명>

$git commit -m "remove file"
$git push origin master

* 로컬저장소에 있는 파일은 삭제하지 않고 원격저장소에 있는 파일만 삭제한다
$git rm --cached <파일명>

$git commit -m "remove file"
$git push origin master

* 개인관리 파일들이 원격저장소에 올라가지 않도록한다.
.gitignore 설정하기

* .gitignore 나타내기
$touch .gitignore

* 현재 repository의 cache를 모두 삭제한다
$git rm -r --cached .

* 로컬저장소에 있는 파일은 삭제하지 않고 원격저장소에 있는 파일을 삭제한다
$git rm -r --cached <파일명>

* .gitignore에 넣은 파일 목록들을 제외하고 다른 모든 파일들을 다시 track하도록 설
$git add .
$git commit -m "Fixed untracked files"
$git push origin master

* 최근 커밋된 버전으로 파일 되돌리기 *****************************************
(unstaged 상태의 파일을 수정했을 때 수정하지 않은 원래의 상태로 되돌릴 때)
$git checkout <파일명>

* 파일 상태를 unstaged로 변경하기
$git reset HEAD <파일명>

* untracked 파일 모두 지우기
$git clean -f

* untracked 파일과 폴더 모두 지우기
$git clean -df

* 지워질 파일 미리 확인하기
$git clean -fd --dry-run

* 삭제될 파일 미리 확인하기
$git clean -n(--dry-run)

* stage에 올린파일 stage에서 내리기
$git restore --staged <파일명>
[$git reset HEAD]

* stage에 올리지 않았으나 수정한 파일 수정전으로 돌아가기
$git restore <파일명>
[$git checkout <파일명>]

* 특정 커밋의 내용을 되돌리는 커밋
$git log --oneline
$git revert <커밋아이디>
-> $git push origin develop

* 바로 직전 커밋을 되돌리는 커밋
$git revert HEAD
-> $git push origin develop

$git status
$git status -s

* 초기 user 정보를 확인한다
$git config --list

* user_name 설정
$git config --global user.name "현대제철(인천)/강인호"

* user_email 설정
$git config --global user.email "kih7898@partners-steel.com"

* 파일이름 길이 제한을 해제한다.
$git config --system ore.longpaths true

* remote master를 로컬로 복사해 온다
$git clone https://

* 현재 폴더를 repository로 지정한다
$git init

* remote와의 연결상태를 확인한다
$git remote

* 원격저장소를 추가한다
$git remote add origin https://

* 모든 파일들을 stage에 올린다
$git add .

* 한개의 파일을 stage에 올린다.
$git add test.txt

* 커멘트와 함께 커밋한다
$git commit -m 'test.txt 커밋'

* 커밋한 파일들을 리모트에 올린다.
$git push origin develop

* 리모트에 있는 파일들을 가져온다.
$git pull origin develop

* 커밋한 파일을 취소한다
$git revert HEAD

* stage에 올린 파일을 stage에서 내린다.
$git restore --cached test.txt

* stage에 올린 파일을 stage에서 내린다.
$git reset HEAD

* stage에 있지 않은 파일을 수정하기 전으로 돌린다.
$git restore test.txt

* stage에 있지 않은 파일을 수정하기 전으로 돌린다.
$git checkout test.txt


